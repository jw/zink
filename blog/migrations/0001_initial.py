# Generated by Django 3.0.8 on 2020-07-05 20:25

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(height_field='height', max_length=255, upload_to='tmp/', width_field='width')),
                ('description', models.TextField(help_text='Description of the image.')),
                ('height', models.PositiveIntegerField(default=0, editable=False)),
                ('width', models.PositiveIntegerField(default=0, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='Static',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the pair.', max_length=200)),
                ('value', models.TextField(help_text='The value of the pair.')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tn_ancestors_pks', models.TextField(blank=True, default='', editable=False, verbose_name='Ancestors pks')),
                ('tn_ancestors_count', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='Ancestors count')),
                ('tn_children_pks', models.TextField(blank=True, default='', editable=False, verbose_name='Children pks')),
                ('tn_children_count', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='Children count')),
                ('tn_depth', models.PositiveSmallIntegerField(default=0, editable=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Depth')),
                ('tn_descendants_pks', models.TextField(blank=True, default='', editable=False, verbose_name='Descendants pks')),
                ('tn_descendants_count', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='Descendants count')),
                ('tn_index', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='Index')),
                ('tn_level', models.PositiveSmallIntegerField(default=1, editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Level')),
                ('tn_priority', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Priority')),
                ('tn_order', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='Order')),
                ('tn_siblings_pks', models.TextField(blank=True, default='', editable=False, verbose_name='Siblings pks')),
                ('tn_siblings_count', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='Siblings count')),
                ('name', models.CharField(max_length=255)),
                ('url', models.CharField(max_length=255)),
                ('tn_parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tn_children', to='blog.Menu', verbose_name='Parent')),
            ],
            options={
                'ordering': ['tn_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(help_text='Date and time when this entry was created', verbose_name='created')),
                ('page', models.CharField(choices=[('BG', 'Blog'), ('SS', 'Stilus'), ('CT', 'Contact'), ('MC', 'Miscellaneous')], default='BG', help_text='The page this entry is for.', max_length=2)),
                ('title', models.CharField(max_length=200)),
                ('body', models.TextField(help_text='The content of this entry.')),
                ('active', models.BooleanField(default=False, help_text='Is this entry viewable on site?')),
                ('posted', models.DateTimeField(blank=True, help_text='Date and time when this entry went public', verbose_name='posted')),
                ('images', models.ManyToManyField(blank=True, to='blog.Image')),
                ('tags', models.ManyToManyField(blank=True, to='blog.Tag')),
            ],
            options={
                'verbose_name_plural': 'Entries',
                'ordering': ['posted'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(help_text='Date and time when this comment was written', verbose_name='created')),
                ('body', models.TextField(help_text='The content of this comment')),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Entry')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
            },
        ),
    ]
